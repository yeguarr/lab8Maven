package locales;

import java.util.ListResourceBundle;

public class Label_en_IN extends ListResourceBundle {
    private Object[][] contents = {
            {"Add", "Add"},
            {"connection", "Connection"},
            {"Client configuration", "Client configuration"},
            {"Server's ip:", "Server's ip:"},
            {"Port:", "Port:"},
            {"Set", "Set"},
            {"ERROR", "Error"},
            {"Start Page", "Start Page"},
            {"Welcome!", "Welcome!"},
            {"Username", "Username"},
            {"login", "Login"},
            {"password", "password"},
            {"password 2", "verification"},
            {"Password", "Password"},
            {"Password 2", "Verification"},
            {"create account", "Create account"},
            {"name", "Name"},
            {"coordinates.", "Coordinates "},
            {"LocationTo.", "LocationTo "},
            {"LocationTo.name", "LocationTo name"},
            {"LocationFrom.", "LocationFrom "},
            {"LocationFrom.name", "LocationFrom name"},
            {"From is null", "From is null"},
            {"From is not null", "From is not null"},
            {"distance is null", "Distance is null"},
            {"distance is not null", "Distance is not null"},
            {"Distance", "Distance"},
            {"cancel", "Cancel"},
            {"clear", "Clear"},
            {"add if min", "Add if min"},
            {"remove greater", "Remove greater"},
            {"remove lower", "Remove lower"},
            {"average of distance", "Average of distance"},
            {"min by creation_date", "Min by creation date"},
            {"print field ascending distance", "Print field ascending distance"},
            {"filter...", "filter..."},
            {"program", "Program"},
            {"Program", "Program"},
            {"Language", "Language"},
            {"小hange to the light side", "小hange to the light side"},
            {"小hange to the dark side", "小hange to the dark side"},
            {"Exit", "Exit"},
            {"log Out", "Log Out"},
            {"Add new Route", "Add new Route"},
            {"add", "Add"},
            {"Remove greater Routes", "Remove greater Routes"},
            {"remove", "Remove"},
            {"Remove lower Routes", "Remove lower Routes"},
            {"Register", "Register"},
            {"go back", "Go back"},
            {"create account", "Create account"},
            {"Update object", "Update object"},
            {"Your color is", "Your color is"},
            {"Server Response", "Server Response"},
            {"server Error Response", "Server Error Response"},
            {"Server Warning Response", "Server Warning Response"},
            {"remove object", "Remove object"},
            {"login less", "Login should be less than 20 characters"},
            {"Connection fail", "Failed to connect to the server"},
            {"Field error", "Found inconsistencies between the fields and the entered text"},
            {"user_name", "Username"},
            {"id", "ID"},
            {"name", "Name"},
            {"coordinate_x", "Coordinate X"},
            {"coordinate_y", "Coordinate Y"},
            {"creationDate", "Creation date"},
            {"from_x", "From X"},
            {"from_y", "From Y"},
            {"from_z", "From Z"},
            {"from_name", "From name"},
            {"to_x", "To X"},
            {"to_y", "To Y"},
            {"to_z", "To Z"},
            {"to_name", "To name"},
            {"distance", "Distance"},
            {"switcher.noCommand", "Unknown command"},
            {"register.invalid.user", "Registration error, user with the same name already exist"},
            {"login.invalid.user", "Login error, mismatch of the user's username and password"},
            {"invalid.user", "Login error, re-login required"},
            {"empty", "Your collection is empty or contains items that can't be displayed"},
            {"success", "Command completed successfully"},
            {"failure", "Failed to execute the command"},
            {"warning.route", "Error entering element data"},
            {"server.distances", "The distances in ascending order: {0}"},
            {"server.min", "The first item in your collection has an ID: {0} and Name: \"{1}\""},
            {"server.average", "Average distance of all elements: {0}"},
            {"text", "{0}"},
            {"client.error.answer", "Client error 8921, lost connection to the server, try connecting to the server again."},
            {"client.error.reed", "Client error 3780, lost connection to the server, try connecting to the server again."},
            {"client.error.process", "Client error 5732, lost connection to the server, try connecting to the server again."},
            {"client.error.lookandfeel", "Client error 2352, the user interface was not loaded."},
            {"client.error.sendcommand", "Client error 1863, failed to send a message to the server."},
            {"client.error.lang", "Client error 3568, unable to translate the program."},
            {"client.error.file", "Client error 9573, failed to save the file."},
            {"client Error Response", "Client error report"}
    };

    @Override
    protected Object[][] getContents() {
        return contents;
    }
}
